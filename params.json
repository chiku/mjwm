{"name":"mjwm","tagline":"mjwm creates JWM application menu from (freedesktop) desktop files","body":"mjwm\r\n====\r\n\r\n[![Build Status](https://travis-ci.org/chiku/mjwm.png?branch=master)](https://travis-ci.org/chiku/mjwm)\r\n[![Build Status](https://drone.io/github.com/chiku/mjwm/status.png)](https://drone.io/github.com/chiku/mjwm/latest)\r\n\r\nOverview\r\n--------\r\n\r\nmjwm creates JWM's menu from (freedesktop) desktop files. Include the generated file in the rootmenu section of your ~/.jwmrc\r\n\r\nRead more about JWM (Joe's Window Manager) at [http://joewing.net/projects/jwm](http://joewing.net/projects/jwm)\r\n\r\nmjwm is based on mjm by insmyic <gminsm@gmail.com> [http://sourceforge.net/projects/mjm](http://sourceforge.net/projects/mjm)\r\n\r\nDependencies\r\n------------\r\n\r\nThe application runs on a POSIX system with a C++ runtime.\r\n\r\nFor compiling the aplication you need make, automake, autoconf and a recent C++ compiler. This application has compiled fine with g++ 4.6, g++ 4.8 and clang++ 3.3.\r\n\r\nInstallation from source\r\n------------------------\r\n\r\n* Clone the repository\r\n\r\n* From the root of the application run\r\n```script\r\n./autogen.sh\r\n./configure --prefix=/usr\r\nmake\r\nsudo make install\r\n```\r\n\r\nOptions\r\n-------\r\n\r\n``` script\r\nUsage: mjwm [options]\r\n\r\nOptional arguments:\r\n  -o, --output-file [FILE]    Outfile file [Default: ./automenu]\r\n  -i, --input-directory [DIRECTORY]\r\n                              Directory to scan for '.desktop' files. Multiple\r\n                                directories, if provided, must be separated by\r\n                                colons. [Default: application directories\r\n                                under $XDG_DATA_HOME & $XDG_DATA_DIRS]\r\n  -c, --category-file [FILE]  Use an external category file. Overrides the\r\n                                built in categories. Please look at\r\n                                default.mjwm to write your own category files.\r\n      --iconize=[THEME]       Search for icon files by name in $HOME,\r\n                                $XDG_DATA_DIRS/icons, and /usr/share/pixmaps.\r\n                                Icon file names would be absolute paths to\r\n                                icons in the specified directories. Hicolor\r\n                                icon theme is used if no theme name is given.\r\n      --summary=type          The summary of the run. Acceptable values are\r\n                                short, normal and long. Defaults to normal.\r\n      --help                  Show this help\r\n      --version               Show version information\r\n```\r\n\r\nUsage\r\n-----\r\n\r\n* Run the script\r\n``` script\r\nmjwm\r\n```\r\n\r\n* Edit your ```$HOME/.jwmrc file```. Add an ```<Include>$HOME/.jwmrc-mjwm</Include>``` line inside ```RootMenu```.\r\n``` xml\r\n<JWM>\r\n  <!-- SNIP SNIP -->\r\n\r\n  <RootMenu onroot=\"12\">\r\n      <!-- Other Menu Entries -->\r\n\r\n      <Include>$HOME/.jwmrc-mjwm</Include>\r\n\r\n      <!-- Other Menu Entries -->\r\n  </RootMenu>\r\n\r\n  <!-- SNIP SNIP -->\r\n</JWM>\r\n```\r\n\r\n* Reload JWM\r\n``` script\r\njwm -reload\r\n```\r\n\r\nExamples\r\n--------\r\n\r\nGenerate menu entries for files inside /usr/local/share/applications\r\n``` script\r\nmjwm -i /usr/local/share/applications\r\n```\r\n\r\nGenerate menu entries for files inside multiple directories /usr/local/share/applications, /usr/share/applications\r\n& ~/.local/share/applications\r\n``` script\r\nmjwm -i /usr/local/share/applications:/usr/share/applications:~/.local/share/applications\r\n```\r\n\r\nCreate menu entries with absolute path names to icons images from Hicolor theme\r\n``` script\r\nmjwm --iconize\r\n```\r\n\r\nCreate menu entries with absolute path names to icons images from Faenza theme\r\n``` script\r\nmjwm --iconize=Faenza # the equals sign is needed\r\n```\r\n\r\nUse categories from as an external file\r\nLook at data/default.mjwm to create your own category file\r\n``` script\r\nmjwm -c data/default.mjwm\r\n```\r\n\r\nRunning tests\r\n-------------\r\n\r\n* Clone the repository\r\n\r\n* From the root of the application run\r\n``` script\r\n./autogen.sh\r\n./configure\r\nVERBOSE=true make check\r\n```\r\n\r\n_mjwm uses [Catch](https://github.com/philsquared/Catch) for unit tests. Catch is released under Boost Software License._\r\n\r\nExit codes\r\n----------\r\n\r\n* 0 - All okay\r\n* 1 - Couldn't access file for read or write (e.g. couldn't create output file)\r\n* 2 - Invalid command line arguments\r\n\r\nContributing\r\n------------\r\n\r\n* Fork the project.\r\n* Make your feature addition or bug fix.\r\n* Add tests for it. This is important so I don't break it in a future version unintentionally.\r\n* Commit, but do not mess with the VERSION. If you want to have your own version, that is fine but bump the version in a commit by itself in another branch so I can ignore it when I pull.\r\n* Send me a pull request.\r\n\r\nLicense\r\n-------\r\n\r\nThis tool is released under the GPLv3 license. Please refer to COPYING for license information.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}